df_joined_and_aggregated = df_combined_pnl.join(
    df_book_hierarchy,
    (df_combined_pnl["reporting_date"] == df_book_hierarchy["reporting_date"]) &
    (df_combined_pnl["subdesk_id"] == df_book_hierarchy["SUBDESK_ID"]) &
    (df_combined_pnl["subdesk_name"] == df_book_hierarchy["SUBDESK_NAME"]),
    "left_outer"
).groupBy(
    df_combined_pnl["reporting_date"],
    df_combined_pnl["subdesk_id"],
    df_combined_pnl["subdesk_name"],
    df_combined_pnl["legal_entity_id"],
    df_combined_pnl["pnl_node"],
    df_combined_pnl["measure"],
    df_combined_pnl["control_process_id"],
    df_combined_pnl["created_timestamp"],
    df_book_hierarchy["area_name"],
    df_book_hierarchy["sector_name"],
    df_book_hierarchy["segment_name"],
    df_book_hierarchy["function_name"],
    df_book_hierarchy["desk_name"],
    lit(None).cast(StringType()).alias("unit_name")  # NULL as String type
).agg(
    _sum("t0_pnl_usd").alias("t0_pnl_usd"),
    _sum("t0_pnl").alias("t0_pnl"),  # Aggregate t0_pnl
    _sum("t1_pnl_usd").alias("t1_pnl_usd"),
    _sum("t0_t1_pnl_var_usd").alias("t0_t1_pnl_var_usd")
).select(
    "reporting_date",
    "subdesk_id",
    "subdesk_name",
    "legal_entity_id",
    "pnl_node",
    "measure",
    "t0_pnl_usd",
    "t0_pnl",
    "t1_pnl_usd",
    "t0_t1_pnl_var_usd",
    "control_process_id",
    "created_timestamp",
    "area_name",
    "sector_name",
    "segment_name",
    "function_name",
    "desk_name",
    "unit_name"
)